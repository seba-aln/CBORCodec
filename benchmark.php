<?php

require_once('./src/CBOR.php');

class Tests {
    public function primitives(): array
    {
        return [
            ['F4', false],
            ['F5', true],
            ['F6', null],
            ['F7', null], // should be undefined
        ];
    }

    public function positiveIntegers(): array
    {
        return [
            ['00', 0],
            ['01', 1],
            ['13', 19],
            ['181F', 31],
            ['190100', 256],
            ['19FFFF', 65535],
            ['1A00010000', 65536],
            ['1AFFFFFFFF', 4294967295],
        ];
    }

    public function negativeIntegers(): array
    {
        return [
            ['20', -1],
            ['38FF', -256],
            ['390100', -257],
            ['39FFFF', -65536],
            ['3A00010000', -65537],
            ['3AFFFFFFFF', -4294967296],
        ];
    }

    public function floats()
    {
        return [
            ['F93C00', 1.0],
            ['F93555', 0.333251953125],
            ['F9EC00', -4096],
            ['FA47D9F95E', 111602.734375],
            ['FAC4027000', -521.75],
            ['FA457F9000', 4089],
            ['FA0002D7F5', 6.00804264307E-39],
            ['FA47D9F95E', 111602.734375],
            ['FB40091EB851EB851F', 3.14],
            ['FB4000147AE147AE14', 2.01],
            ['FB0000000000000000', 0],
            ['FBc0240083126e978d', -10.001],
        ];
    }

    public function byteStrings()
    {
        return [
            ['4161', 'a'],
            ['43666F6F', 'foo'],
            [
                '581A5A61C5BCC3B3C582C4872067C499C59B6CC485206A61C5BAC584',
                'ZaÅ¼Ã³Å‚Ä‡ gÄ™Å›lÄ… jaÅºÅ„',
            ],
            [
                '5823717569636B2062726F776E20666F78206A756D7073206F766572206C617A7920646F67',
                'quick brown fox jumps over lazy dog',
            ],
            [ '4A507562F09F93A24E7562', 'PubðŸ“¢Nub']
        ];
    }

    public function utf8Strings()
    {
        return [
            ['6161', 'a'],
            ['63666F6F', 'foo'],
            [
                '781A5A61C5BCC3B3C582C4872067C499C59B6CC485206A61C5BAC584',
                'ZaÅ¼Ã³Å‚Ä‡ gÄ™Å›lÄ… jaÅºÅ„',
            ],
            [
                '7823717569636B2062726F776E20666F78206A756D7073206F766572206C617A7920646F67',
                'quick brown fox jumps over lazy dog',
            ],
            [ '6A507562F09F93A24E7562', 'PubðŸ“¢Nub'],
            // [

            //     "Javascript, iphone, android, ruby, python perl and PHP.\r\n\r\nInitialize PubNub with the new PubNub syntax, grab you API keys.\r\n\r\nPublish syntax, select a channel, send a message, send a bunch of data.\r\n\r\n1.8k is a hard-coded limit, compresses down to signle datagram\r\n\r\nefficiently sending small amounts of data\r\n\r\nthrough infrastructure planned to handle all the data\r\n\r\nRedundancy, high availability!"
            // ]
        ];
    }

    public function arrays()
    {
        return [
            [ '80', [] ],
            [ '83010203', [ 1, 2, 3 ] ],
            [ '83416141624163', [ 'a','b','c' ] ],
            [ '831A00BC614EFB4028B0FCB4F1E4B4483132333435363738', [ 12345678, 12.345678, '12345678' ] ],
            [ '81F6', [ null ] ],
            [ '83F6F6F6', [ null, null, null ] ],
            [

                ['J','a','v','a','s','c','r','i','p','t',',',' ','i','p','h','o','n','e',',',' ','a','n','d','r','o','i','d',',',' ','r','u','b','y',',',' ','p','y','t','h','o','n',' ','p','e','r','l',' ','a','n','d',' ','P','H','P','.','I','n','i','t','i','a','l','i','z','e',' ','P','u','b','N','u','b',' ','w','i','t','h',' ','t','h','e',' ','n','e','w',' ','P','u','b','N','u','b',' ','s','y','n','t','a','x',',',' ','g','r','a','b',' ','y','o','u',' ','A','P','I',' ','k','e','y','s','.','P','u','b','l','i','s','h',' ','s','y','n','t','a','x',',',' ','s','e','l','e','c','t',' ','a',' ','c','h','a','n','n','e','l',',',' ','s','e','n','d',' ','a',' ','m','e','s','s','a','g','e',',',' ','s','e','n','d',' ','a',' ','b','u','n','c','h',' ','o','f',' ','d','a','t','a','.','1','.','8','k',' ','i','s',' ','a',' ','h','a','r','d','-','c','o','d','e','d',' ','l','i','m','i','t',',',' ','c','o','m','p','r','e','s','s','e','s',' ','d','o','w','n',' ','t','o',' ','s','i','g','n','l','e',' ','d','a','t','a','g','r','a','m','e','f','f','i','c','i','e','n','t','l','y',' ','s','e','n','d','i','n','g',' ','s','m','a','l','l',' ','a','m','o','u','n','t','s',' ','o','f',' ','d','a','t','a','t','h','r','o','u','g','h',' ','i','n','f','r','a','s','t','r','u','c','t','u','r','e',' ','p','l','a','n','n','e','d',' ','t','o',' ','h','a','n','d','l','e',' ','a','l','l',' ','t','h','e',' ','d','a','t','a','R','e','d','u','n','d','a','n','c','y',',',' ','h','i','g','h',' ','a','v','a','i','l','a','b','i','l','i','t','y','!']
            ]
        ];
    }

    public function hashMaps()
    {
        return [
            [ 'A1465075624E75624652756C657A21', ['PubNub' => 'Rulez!'] ],
            [
                'A1465075624E7562A44C64656C697665727954696D65F93400424841F54A7573657253746174757344F09F98830183010203',
                [ 'PubNub' => [ 'deliveryTime' => 0.25, 'HA' => true, 'userStatus' => 'ðŸ˜ƒ', 1 => [ 1, 2, 3 ] ] ]
            ],
            [
                'A20000613000', [0 => 0, '0' => 0 ]
            ],
            [

                [ 'a0' => 'a 0','a1' => 'a 1','a2' => 'a 2','a3' => 'a 3','a4' => 'a 4','a5' => 'a 5','a6' => 'a 6','a7' => 'a 7','a8' => 'a 8','a9' => 'a 9','b0' => 'b 0','b1' => 'b 1','b2' => 'b 2','b3' => 'b 3','b4' => 'b 4','b5' => 'b 5','b6' => 'b 6','b7' => 'b 7','b8' => 'b 8','b9' => 'b 9','c0' => 'c 0','c1' => 'c 1','c2' => 'c 2','c3' => 'c 3','c4' => 'c 4','c5' => 'c 5','c6' => 'c 6','c7' => 'c 7','c8' => 'c 8','c9' => 'c 9','d0' => 'd 0','d1' => 'd 1','d2' => 'd 2','d3' => 'd 3','d4' => 'd 4','d5' => 'd 5','d6' => 'd 6','d7' => 'd 7','d8' => 'd 8','d9' => 'd 9','e0' => 'e 0','e1' => 'e 1','e2' => 'e 2','e3' => 'e 3','e4' => 'e 4','e5' => 'e 5','e6' => 'e 6','e7' => 'e 7','e8' => 'e 8','e9' => 'e 9','f0' => 'f 0','f1' => 'f 1','f2' => 'f 2','f3' => 'f 3','f4' => 'f 4','f5' => 'f 5','f6' => 'f 6','f7' => 'f 7','f8' => 'f 8','f9' => 'f 9','g0' => 'g 0','g1' => 'g 1','g2' => 'g 2','g3' => 'g 3','g4' => 'g 4','g5' => 'g 5','g6' => 'g 6','g7' => 'g 7','g8' => 'g 8','g9' => 'g 9','h0' => 'h 0','h1' => 'h 1','h2' => 'h 2','h3' => 'h 3','h4' => 'h 4','h5' => 'h 5','h6' => 'h 6','h7' => 'h 7','h8' => 'h 8','h9' => 'h 9','i0' => 'i 0','i1' => 'i 1','i2' => 'i 2','i3' => 'i 3','i4' => 'i 4','i5' => 'i 5','i6' => 'i 6','i7' => 'i 7','i8' => 'i 8','i9' => 'i 9','j0' => 'j 0','j1' => 'j 1','j2' => 'j 2','j3' => 'j 3','j4' => 'j 4','j5' => 'j 5','j6' => 'j 6','j7' => 'j 7','j8' => 'j 8','j9' => 'j 9' ]
            ]
        ];
    }

    public function getAll()
    {
        return [
            'primitives' => $this->primitives(),
            'positiveInts' => $this->positiveIntegers(),
            'negativeInts' => $this->negativeIntegers(),
            'floats' => $this->floats(),
            'bStrings' => $this->byteStrings(),
            'uStrings' => $this->utf8Strings(),
            'arrays' => $this->arrays(),
            'hashMaps' => $this->hashMaps()
        ];
    }
}

$allTests = (new Tests)->getAll();
$fails = 0;
$startTime = microtime(true);
foreach ($allTests as $name => $testGroup) {
    $times[$name]['start'] = microtime(true);
    for ($i=0; $i < 1000; $i++) {
        foreach ($testGroup as $test) {
            $result = PubNub\CborCodec\CBOR::decode($test[0]);
        }
    }
    $times[$name]['end'] = microtime(true);
}
$endTime = microtime(true);

foreach ($times as $group => $time) {
    printf("%s: %.5f\n", $group, $time['end']-$time['start']);
}
printf("Total: %.5f\nFails: %d\n", $endTime-$startTime, $fails);
var_dump(memory_get_peak_usage()/1024); die;